# Support for local override
BENDER		   ?= bender
DASM 	       ?= spike-dasm
VLT			   ?= verilator
CC             := gcc-10
CXX			   := g++-10

VERILATOR_ROOT ?= $(dir $(shell which $(VLT)))/../share/verilator
VLT_ROOT	   ?= ${VERILATOR_ROOT}

MATCH_END := '/+incdir+/ s/$$/\/*\/*/'
MATCH_BGN := 's/+incdir+//g'
SED_SRCS  := sed -e ${MATCH_END} -e ${MATCH_BGN}
TB_SRCS   := $(wildcard ${ROOT}/hw/ip/test/*.sv)
TB_DIR    := ${mkfile_path}/test/cc


FESVR_VERSION  ?= 35d50bc40e59ea1d5566fbd3d9226023821b1bb6

VLT_BUILDDIR := $(mkfile_path)/work-vlt
VLT_FESVR     = $(mkfile_path)/riscv-isa-sim
VLT_FLAGS    += --cc
VLT_FLAGS    += --exe 
VLT_FLAGS    += --trace
VLT_FLAGS    += -DREDMULE_HWPE_SYNTH
VLT_FLAGS    += -Wno-BLKANDNBLK
VLT_FLAGS    += -Wno-LITENDIAN
VLT_FLAGS    += -Wno-CASEINCOMPLETE
VLT_FLAGS    += -Wno-CMPCONST
VLT_FLAGS    += -Wno-WIDTH
VLT_FLAGS    += -Wno-WIDTHCONCAT
VLT_FLAGS    += -Wno-UNSIGNED
VLT_FLAGS    += -Wno-UNOPTFLAT
VLT_FLAGS    += -Wno-fatal
VLT_FLAGS    += --timing
VLT_FLAGS    += --unroll-count 1024
#VLT_BENDER   += -t redmule_hwpe
#VLT_BENDER   += -t redmule_test_hwpe
#VLT_SOURCES  := $(shell ${BENDER} script flist ${VLT_BENDER} | ${SED_SRCS})
VLT_CFLAGS   += -std=c++17 -pthread
VLT_CFLAGS   += -g -I ${VLT_BUILDDIR} -I $(VLT_ROOT)/include -I $(VLT_ROOT)/include/vltstd -I $(VLT_FESVR)/include -I $(TB_DIR)



# default on target `all`
all:

#################
# Prerequisites #
#################
# Eventually it could be an option to package this statically using musl libc.




# Build fesvr seperately for verilator since this might use different compilers
# and libraries than modelsim/vcs and
$(VLT_FESVR)/${FESVR_VERSION}_unzip:
	mkdir -p $(dir $@)
	wget -O $(dir $@)/${FESVR_VERSION} https://github.com/riscv/riscv-isa-sim/tarball/${FESVR_VERSION}
	tar xfm $(dir $@)${FESVR_VERSION} --strip-components=1 -C $(dir $@)
	patch -d $(dir $@) -p1 < $(mkfile_path)/util/patches/riscv-isa-sim/fesrv.patch
	touch $@

riscv-isa-sim/lib/libfesvr.a: $(VLT_FESVR)/${FESVR_VERSION}_unzip
	cd $(dir $<)/ && ./configure --prefix `pwd` \
        CC=${CC} CXX=${CXX} CFLAGS="${CFLAGS}" CXXFLAGS="${CXXFLAGS}" LDFLAGS="${LDFLAGS}"
	$(MAKE) -C $(dir $<) install-config-hdrs install-hdrs libfesvr.a
	mkdir -p $(dir $@)
	cp $(dir $<)libfesvr.a $@




########
# Util #
########
logs/trace_hart_%.txt: logs/trace_hart_%.dasm ${ROOT}/util/gen_trace.py
	$(DASM) < $< | $(PYTHON) ${ROOT}/util/gen_trace.py > $@

traces: $(shell (ls logs/trace_hart_*.dasm 2>/dev/null | sed 's/\.dasm/\.txt/') || echo "")

# make annotate
# Generate source-code interleaved traces for all harts. Reads the binary from
# the logs/.rtlbinary file that is written at start of simulation in the vsim script
logs/trace_hart_%.s: logs/trace_hart_%.txt ${ROOT}/util/trace/annotate.py
	$(PYTHON) ${ROOT}/util/trace/annotate.py -q -o $@ $(BINARY) $<
BINARY ?= $(shell cat logs/.rtlbinary)
annotate: $(shell (ls logs/trace_hart_*.dasm 2>/dev/null | sed 's/\.dasm/\.s/') || echo "")


