

#############
# Verilator #
#############

include mk/Common.mk

VLT_TOP_MODULE ?= redmule_tb



# Test-Program directores.
TEST               ?= redmule
TEST_FILES         ?= $(TEST).c
TEST_TEST_DIR       = $(CORE_V_VERIF)/sw

#  -Core Firmware and the RISCV GCC Toolchain (SDK)


# Common output directories
RUN_INDEX                ?= 0
SIM_RESULTS              ?= simulation_results
SIM_TEST_RESULTS         = $(SIM_RESULTS)/$(TEST)
SIM_RUN_RESULTS          = $(SIM_TEST_RESULTS)/$(RUN_INDEX)
SIM_TEST_PROGRAM_RESULTS = $(SIM_RUN_RESULTS)/test_program
SIM_BSP_RESULTS          = $(CORE_V_VERIF)/sw/build/bsp
#####
VERI_LOG_DIR      ?= $(mkfile_path)/log/$(VLT_TOP_MODULE)
SIM_TEST_INPUTS   ?= $(mkfile_path)/vsim
BIN_DIR           = $(mkfile_path)/bin/$(VLT_TOP_MODULE)
VERI_FLAGS        +=



.PHONY: veri-clean 

# Clean all build directories and temporary files for Questasim simulation
veri-clean: 
	rm -f manifest.flist
	make -C sim/core -f Makefile.verilator CV_CORE_MANIFEST=${CURDIR}/manifest.flist  SIM_RESULTS=$(BIN_DIR) $@

verilate: $(BIN_DIR)/verilator_executable

manifest.flist: Bender.yml
	$(BENDER) script verilator $(common_targs) $(VLT_BENDER)  >$@
	touch $@

$(BIN_DIR)/verilator_executable: manifest.flist
	mkdir -p $(dir $@)
	make -C sim/core -f Makefile.verilator CV_CORE_MANIFEST=${CURDIR}/manifest.flist  SIM_RESULTS=$(BIN_DIR) VLT_TOP_MODULE=$(VLT_TOP_MODULE) verilate

sanity-veri-run: VLT_TOP_MODULE := tb_top_verilator
sanity-veri-run:
	mkdir -p $(VERI_LOG_DIR)
	rm -f $(VERI_LOG_DIR)/verilator_tb.vcd
	make -C sim/core -f Makefile.verilator CV_CORE_MANIFEST=${CURDIR}/manifest.flist  SIM_RESULTS=$(BIN_DIR) VLT_TOP_MODULE=$(VLT_TOP_MODULE) TEST=hello-world run-test
	mv sim/core/verilator_tb.vcd $(VERI_LOG_DIR)/

.PHONY: run-test
run-test: $(BIN_DIR)/verilator_executable 
	@echo "$(BANNER)"
	@echo "* Running with Verilator: $(BIN_DIR)/verilator_executable "
	@echo "*               log file: $(VERI_LOG_DIR)/$(TEST).log"
	@echo "*             *.vcd file: $(VERI_LOG_DIR)"
	@echo "$(BANNER)"
	mkdir -p $(VERI_LOG_DIR)
	rm -f $(VERI_LOG_DIR)/verilator_tb.vcd
	$(BIN_DIR)/verilator_executable  \
		$(VERI_FLAGS) \
		"+firmware=$(SIM_TEST_INPUTS)/$(TEST).hex" \
		"+simdata=$(SIM_TEST_INPUTS)/$(TEST).hex" \
		| tee $(VERI_LOG_DIR)/$(TEST).log
	mv verilator_tb.vcd $(VERI_LOG_DIR)/

	
.PHONY: help

help:
	@echo "verilator related available targets:"
	@echo verilate                                 -- builds verilator simulation, available here: $(BIN_DIR)/verilator_executable
	@echo run-test                                 -- runs the test
	@echo veri-clean                               -- gets a clean slate for simulation
	@echo verilate VLT_TOP_MODULE=tb_top_verilator
	



sim-inputs: $(VSIM_DIR) $(SIM_TEST_INPUTS)/$(TEST).hex 

	